#!/usr/bin/env python3
import os
import sys
import json

from translate_cli import translate

from translate_cli.format import bold
from translate_cli.format import italic
from translate_cli.format import underline
from translate_cli.lang_map import lang_maps


def get_help():
    print('''usage: trans [OPTIONS] [SOURCE_LANGUAGE]:[TARGET_LANGUAGE] [TEXT]

    A simple cli tool to translate text with google translate

OPTIONS:
    -h, --help
        print help message
    -d, --dict
        dictionary mode
    -l, --list
        list supported language codes

EXAMPLES:
    trans awesome :fr
        translate ‘awesome’ to French
    trans python -d
        lookup ‘python’ using dictionary mode''')
    sys.exit(0)


def list_codes():
    for n, i in enumerate(lang_maps.items()):
        if n % 2 == 0:
            print(f'{i[1]["name"]:20} -->   {underline.format(bold.format(i[0])):3}', end = f'{"":3}')
        else:
            print(f'{i[1]["name"]:20} -->   {underline.format(bold.format(i[0])):3}')
    sys.exit(0)


def parse_args():
    arguments = sys.argv[1:]
    is_dict = False
    sl, tl = 'auto', 'en'

    for i in arguments[:]:
        if i in ('-h', '--help'):
            get_help()
        elif i in ('-l', '--list'):
            list_codes()
        elif i in ('-d', '--dict'):
            is_dict = True
            arguments.remove(i)
        elif ':' in i:
            ls = i.split(':'); sl = ls[0] if ls[0] else 'auto'
            tl = ls[1] if ls[1] not in ('', 'auto') else 'en'
            arguments.remove(i)
    if len(arguments) == 0:
        print('There is nothing to translate!')
        sys.exit(1)

    # check if lang code is valid
    if sl not in lang_maps or tl not in lang_maps:
        raise ValueError('Invalid language code.')
    text = ' '.join(arguments)

    return is_dict, sl, tl, text


def main():
    is_dict, sl, tl, text = parse_args()

    result = translate(text, sl, tl)

    tr = result['translation']
    tl = lang_maps[tl]['name']
    trs = ', '.join(result['translations'])

    if result['source_pronunciation'] and \
            isinstance(result['source_pronunciation'], str):
        sp = result['source_pronunciation']
    else:
        sp = None

    if result['target_pronunciation'] and \
            isinstance(result['target_pronunciation'], str):
        tp = result['target_pronunciation']
    else:
        tp = None

    if result['src_language'] in lang_maps:
        sl = lang_maps[result['src_language']]['name']
    else:
        sl = result['src_language']

    # dictionary mode
    if is_dict:
        print(f'{text}\n/{italic.format(sp)}/\n')

        for i in result['definitions']:
            print(i[0])
            for _i in i[1]:
                print(f'{" ":4}{_i}\n') 

        if len(result['synonyms']) != 0: print('Synonyms')
        for j in result['synonyms']:
            print(f'{" ":4}{j[0]}')
            for _j in j[1]:
                print(f'{" ":8}- {bold.format(", ".join(_j))}')
            print()

        if len(result['examples']) != 0: print('Example')
        for k in result['examples']:
            k = k.replace('<b>', '\033[1m\033[4m')
            k = k.replace('</b>', '\033[0m')
            print(f'{" ":4}- {k}\n')

    # translation mode
    else:
        print(f'{text}')
        print(f'/{italic.format(sp)}/') if sp else None
        print('')
        print(f'{bold.format(tr)}')
        print(f'/{italic.format(tp)}/') if tp else None
        print('')
        print(f'Translation of {underline.format(text)}')
        print(f'[ {underline.format(sl)} -> {bold.format(tl)} ]')
        print('')
        print(f'{underline.format(text)}')
        print(f'    {bold.format(trs)}')


if __name__ == '__main__':
    sys.exit(main())
